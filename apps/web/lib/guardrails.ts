// Wav Anti-Bullshit guardrails system

export interface ModerationResult {
  hits: any[]
  contradiction: boolean
  movable: boolean
}

export type RefusalSeverity = 'N1' | 'N2' | 'N3'

/**
 * Heuristique pour d√©terminer si le bot doit r√©pondre "Je ne sais pas"
 * Bas√© sur la qualit√© des r√©sultats RAG et les contradictions d√©tect√©es
 */
export function shouldSayIDK(hits: any[], movable: boolean, contradiction: boolean): boolean {
  // N3: Contradiction d√©tect√©e dans les sources
  if (contradiction) return true
  
  // N2: Sujet mouvant sans sources suffisantes  
  if (movable && (!hits || hits.length < 2)) return true
  
  // N1: Pas assez de contexte pertinent
  if (!hits || hits.length === 0) return true
  
  // V√©rifier la qualit√© des hits (score de similarit√© minimum)
  const relevantHits = hits.filter(hit => hit.similarity && hit.similarity > 0.7)
  if (relevantHits.length === 0) return true
  
  return false
}

/**
 * Compose une r√©ponse de refus selon la s√©v√©rit√©
 */
export function composeRefusal(category: string, severity: RefusalSeverity): string {
  const baseMessage = "‚úÖ **Certifi√© Wav Anti-Bullshit** ‚Äî "
  
  switch (severity) {
    case 'N1':
      return `${baseMessage}Je ne dispose pas d'informations v√©rifi√©es sur "${category}". 
      
**Protocole d'incertitude :**
1. Reformule ta question avec plus de contexte
2. Pr√©cise ton objectif concret  
3. Indique ton niveau d'exp√©rience actuel

Je pr√©f√®re dire "je ne sais pas" plut√¥t que d'inventer. C'est √ßa, le syst√®me Wav Anti-Bullshit.`

    case 'N2':
      return `${baseMessage}Ce sujet ("${category}") √©volue rapidement et mes sources pourraient √™tre obsol√®tes.

**Protocole pour sujets mouvants :**
1. V√©rifie les derni√®res mises √† jour officielles
2. Teste en petit avant de g√©n√©raliser
3. Croise plusieurs sources r√©centes
4. Reviens me voir avec tes r√©sultats de test

L'honn√™tet√© avant tout - c'est ma marque de fabrique.`

    case 'N3':
      return `${baseMessage}Attention ! J'ai d√©tect√© des **contradictions** dans mes sources sur "${category}".

**Protocole contradiction :**
1. üîç Fais tes propres recherches avec sources dat√©es
2. ‚ö†Ô∏è M√©fie-toi des informations contradictoires  
3. üß™ Teste sur petite √©chelle avant application
4. üìä Mesure les r√©sultats objectivement

Jamais d'invention chez Fred Wav. Si c'est flou, je le dis.`

    default:
      return `${baseMessage}Je ne peux pas r√©pondre de mani√®re fiable sur ce sujet.`
  }
}

/**
 * Filtre les tentatives d'injection de prompt
 */
export function stripInjections(text: string): string {
  if (!text || typeof text !== 'string') return ''
  
  let cleaned = text
  
  // Patterns d'injection courants
  const injectionPatterns = [
    /ignore\s+(previous|all)\s+(instructions?|prompts?)/gi,
    /you\s+are\s+now\s+/gi,
    /system\s*:\s*/gi,
    /assistant\s*:\s*/gi, 
    /human\s*:\s*/gi,
    /forget\s+(everything|all)/gi,
    /pretend\s+(you\s+are|to\s+be)/gi,
    /roleplay\s+as/gi,
    /act\s+as\s+/gi,
    /simulate\s+/gi,
    /override\s+/gi,
    /reset\s+/gi
  ]
  
  // Nettoyer les patterns d'injection
  injectionPatterns.forEach(pattern => {
    cleaned = cleaned.replace(pattern, '[FILTERED]')
  })
  
  // Limiter la longueur pour √©viter les attaques par volume
  if (cleaned.length > 4000) {
    cleaned = cleaned.substring(0, 4000) + '...[TRUNCATED]'
  }
  
  return cleaned.trim()
}

/**
 * D√©tecte si le sujet est "mouvant" (prix, algorithmes, lois, mises √† jour)
 */
export function isMovableTopic(text: string): boolean {
  if (!text || typeof text !== 'string') return false
  
  const movablePatterns = [
    // Prix et co√ªts
    /prix|co√ªt|tarif|‚Ç¨|\$|budget|payant|gratuit|abonnement/i,
    
    // Algorithmes (√©voluent constamment)
    /algorithme|algo|reach|port√©e|ranking|feed|for\s+you|fyp/i,
    
    // Aspects l√©gaux et r√©glementaires
    /loi|l√©gal|r√©glementation|rgpd|droit|juridique|tribunal/i,
    
    // Mises √† jour et nouveaut√©s
    /mise\s+√†\s+jour|update|nouveau|nouvelle|r√©cent|derni√®r|2024|2025/i,
    
    // Fonctionnalit√©s en beta ou test
    /beta|test|exp√©rimental|bient√¥t|pr√©vu|futur/i,
    
    // M√©triques changeantes
    /stats|statistiques|cpm|rpm|vue|vues|followers|abonn√©s/i
  ]
  
  return movablePatterns.some(pattern => pattern.test(text))
}